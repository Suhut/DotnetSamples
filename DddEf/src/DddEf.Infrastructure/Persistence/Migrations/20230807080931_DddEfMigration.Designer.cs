// <auto-generated />
using System;
using DddEf.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DddEf.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(DddEfContext))]
    [Migration("20230807080931_DddEfMigration")]
    partial class DddEfMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DddEf.Domain.Aggregates.Customer.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Tm_Customer", (string)null);
                });

            modelBuilder.Entity("DddEf.Domain.Aggregates.Product.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Tm_Product", (string)null);
                });

            modelBuilder.Entity("DddEf.Domain.Aggregates.SalesOrder.SalesOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TransDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tx_SalesOrder", (string)null);
                });

            modelBuilder.Entity("DddEf.Domain.Aggregates.SalesOrder.SalesOrder", b =>
                {
                    b.OwnsMany("DddEf.Domain.Aggregates.SalesOrder.Entities.SalesOrderItem", "Items", b1 =>
                        {
                            b1.Property<Guid>("Det1Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Det1Id");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .HasColumnType("float");

                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Qty")
                                .HasColumnType("float");

                            b1.Property<int>("RowNumber")
                                .HasColumnType("int");

                            b1.HasKey("Det1Id");

                            b1.HasIndex("Id", "RowNumber")
                                .IsUnique();

                            b1.ToTable("Tx_SalesOrder_Item", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("Id");
                        });

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
